{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///Users/louisidundun/Documents/sleeky-programmers/todo-frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:5000'; //  Backend URL\n\nexport const api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: { 'Content-Type': 'application/json' }\n});\n\ntype CreateTodoType = {\n  text: string\n  completed: boolean\n}\n\n// Fetch all todos\nexport const getTodos = async () => {\n  const response = await api.get('/todos/fetch');\n  return response.data;\n};\n\n// Create a new todo\nexport const createTodo = async (params: CreateTodoType) => {\n  const response = await api.post('/todos/create', params);\n  return response.data;\n};\n\n// Update a todo\nexport const updateTodo = async (id: string, updatedTodo: { title: string }) => {\n  const response = await api.put(`/todos/update/${id}`, updatedTodo);\n  return response.data;\n};\n\n// Delete a todo\nexport const deleteTodo = async (id: string) => {\n  await api.delete(`/todos/delete/${id}`);\n};\n"],"names":[],"mappings":";;;;;;;AAAA;;AAEA,MAAM,eAAe,yBAAyB,eAAe;AAEtD,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IAC9B,SAAS;IACT,SAAS;QAAE,gBAAgB;IAAmB;AAChD;AAQO,MAAM,WAAW;IACtB,MAAM,WAAW,MAAM,IAAI,GAAG,CAAC;IAC/B,OAAO,SAAS,IAAI;AACtB;AAGO,MAAM,aAAa,OAAO;IAC/B,MAAM,WAAW,MAAM,IAAI,IAAI,CAAC,iBAAiB;IACjD,OAAO,SAAS,IAAI;AACtB;AAGO,MAAM,aAAa,OAAO,IAAY;IAC3C,MAAM,WAAW,MAAM,IAAI,GAAG,CAAC,CAAC,cAAc,EAAE,IAAI,EAAE;IACtD,OAAO,SAAS,IAAI;AACtB;AAGO,MAAM,aAAa,OAAO;IAC/B,MAAM,IAAI,MAAM,CAAC,CAAC,cAAc,EAAE,IAAI;AACxC","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///Users/louisidundun/Documents/sleeky-programmers/todo-frontend/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { createTodo, deleteTodo, getTodos, updateTodo } from \"@/services/api\";\nimport { useEffect, useState } from \"react\";\n\nconst TodoApp = () => {\n  const [todos, setTodos] = useState<{ id: string; text: string; completed: boolean }[]>([]);\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [editingId, setEditingId] = useState<string | null>(null);\n\n  // Fetch todos when component mounts\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        const fetchedTodos = await getTodos();\n        const normalizedTodos = fetchedTodos.map((todo: any) => ({\n          id: todo._id,\n          text: todo.text,\n          completed: todo.completed,\n        }));\n        setTodos(normalizedTodos);\n      } catch (error) {\n        console.error(\"Error fetching todos:\", error);\n      }\n    };\n\n    fetchTodos();\n}, []);\n\n  // ADD or UPDATE\n  const addOrUpdateTodo = async () => {\n    if (!newTodo.trim()) return;\n\n    if (editingId) {\n      // update API\n      try {\n        await updateTodo(editingId, { title: newTodo });\n        setTodos(\n          todos.map((todo) =>\n            todo.id === editingId ? { ...todo, text: newTodo } : todo\n          )\n        );\n      } catch (error) {\n        console.error(\"Error updating todo:\", error);\n      }\n      setEditingId(null);\n    } else {\n      // create API\n      try {\n        const created = await createTodo({ text: newTodo, completed: false });\n        setTodos([...todos, created]); // assuming backend returns the created todo with id\n      } catch (error) {\n        console.error(\"Error creating todo:\", error);\n      }\n    }\n\n    setNewTodo(\"\");\n  };\n\n  // TOGGLE\n  const toggleTodo = (id: string) => {\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo\n      )\n    );\n  };\n\n  // DELETE\n  const deleteTodoApi = async (id: string) => {\n    try {\n      await deleteTodo(id); // id will now be valid\n      setTodos(todos.filter((todo) => todo.id !== id));\n    } catch (error) {\n      console.error(\"Failed to delete todo:\", error);\n    }\n  };\n\n  // OPEN EDIT MODE\n  const editTodo = (id: string, text: string) => {\n    setEditingId(id);\n    setNewTodo(text);\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-fuchsia-50 p-6\">\n      <div className=\"w-full max-w-md bg-gray-600 p-6 rounded-lg shadow-lg\">\n        <h1 className=\"text-2xl font-semibold text-center text-green-600\">\n          Todo List\n        </h1>\n        <div className=\"mt-4 flex\">\n          <input\n            type=\"text\"\n            className=\"flex-1 p-2 border rounded-l-md focus:outline-none focus:ring-2 focus:ring-green-500\"\n            placeholder=\"Add a new task...\"\n            value={newTodo}\n            onChange={(e) => setNewTodo(e.target.value)}\n          />\n          <button\n            onClick={addOrUpdateTodo}\n            className=\"bg-green-600 text-white px-4 py-2 rounded-r-md hover:bg-green-700\"\n          >\n            {editingId ? \"Update\" : \"Add\"}\n          </button>\n        </div>\n        <ul className=\"mt-4 space-y-2\">\n          {todos.map((todo) => (\n            <li\n              key={todo.id}\n              className={`flex justify-between items-center p-2 border rounded-md ${\n                todo.completed ? \"bg-gray-200 line-through\" : \"\"\n              }`}\n            >\n              <span\n                onClick={() => toggleTodo(todo.id)}\n                className=\"cursor-pointer flex-1\"\n              >\n                {todo.text}\n              </span>\n              <button\n                onClick={() => editTodo(todo.id, todo.text)}\n                className=\"text-green-500 hover:text-green-700 mr-2\"\n              >\n                Edit\n              </button>\n              <button\n                onClick={() => deleteTodoApi(todo.id)}\n                className=\"text-red-500 hover:text-red-700\"\n              >\n                &#10005;\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default TodoApp;\n\n"],"names":[],"mappings":"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","debugId":null}}]
}