{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///Users/louisidundun/Documents/sleeky-programmers/todo-frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:5000/todos'; //  Backend URL\n\nexport const api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: { 'Content-Type': 'application/json' }\n});\n\n// Fetch all todos\nexport const getTodos = async () => {\n  const response = await api.get('/');\n  return response.data;\n};\n\n// Create a new todo\nexport const createTodo = async (todo: { title: string }) => {\n  const response = await api.post('/', todo);\n  return response.data;\n};\n\n// Update a todo\nexport const updateTodo = async (id: string, updatedTodo: { title: string }) => {\n  const response = await api.put(`/${id}`, updatedTodo);\n  return response.data;\n};\n\n// Delete a todo\nexport const deleteTodo = async (id: string) => {\n  await api.delete(`/${id}`);\n};\n"],"names":[],"mappings":";;;;;;;AAAA;;AAEA,MAAM,eAAe,+BAA+B,eAAe;AAE5D,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IAC9B,SAAS;IACT,SAAS;QAAE,gBAAgB;IAAmB;AAChD;AAGO,MAAM,WAAW;IACtB,MAAM,WAAW,MAAM,IAAI,GAAG,CAAC;IAC/B,OAAO,SAAS,IAAI;AACtB;AAGO,MAAM,aAAa,OAAO;IAC/B,MAAM,WAAW,MAAM,IAAI,IAAI,CAAC,KAAK;IACrC,OAAO,SAAS,IAAI;AACtB;AAGO,MAAM,aAAa,OAAO,IAAY;IAC3C,MAAM,WAAW,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE;IACzC,OAAO,SAAS,IAAI;AACtB;AAGO,MAAM,aAAa,OAAO;IAC/B,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI;AAC3B","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///Users/louisidundun/Documents/sleeky-programmers/todo-frontend/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from 'react';\nimport { getTodos, createTodo, deleteTodo } from '../services/api'\nimport TodoList from '../components/TodoLists';\nimport TodoForm from '../components/TodoForm';\n\nexport default function Home() {\n  const [todos, setTodos] = useState<{ id: string, text: string, completed: boolean }[]>([]);\n\n  const [newTodo, setNewTodo] = useState(\"\");\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = async () => {\n    const data = await getTodos();\n    setTodos(data.map((todo: { _id: string; title: string }) => ({\n      id: todo._id,\n      text: todo.title,\n      completed: false, // Default value for completed\n    })));\n  };\n\n  const addTodo = () => {\n    if (!newTodo.trim()) return;\n    setTodos([...todos, { id: Date.now().toString(), text: newTodo, completed: false }]);\n    setNewTodo(\"\");\n  };\n\n  const toggleTodo = (id) => {\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo\n      )\n    );\n  };\n\n  const removeTodo = async (id: string) => {\n    await deleteTodo(id);\n    fetchTodos();\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-100 p-6\">\n    <div className=\"w-full max-w-md bg-black p-6 rounded-lg shadow-lg\">\n      <h1 className=\"text-2xl font-semibold text-center text-blue-600\">Todo List</h1>\n      <div className=\"mt-4 flex\">\n        <input\n          type=\"text\"\n          className=\"flex-1 p-2 border rounded-l-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          placeholder=\"Add a new task...\"\n          value={newTodo}\n          onChange={(e) => setNewTodo(e.target.value)}\n        />\n        <button\n          onClick={addTodo}\n          className=\"bg-blue-600 text-white px-4 py-2 rounded-r-md hover:bg-blue-700\"\n        >\n          Add\n        </button>\n      </div>\n      <ul className=\"mt-4 space-y-2\">\n        {todos.map((todo) => (\n          <li\n            key={todo.id}\n            className={`flex justify-between items-center p-2 border rounded-md ${todo.completed ? \"bg-blue-200 line-through\" : \"\"}`}\n          >\n            <span\n              onClick={() => toggleTodo(todo.id)}\n              className=\"cursor-pointer flex-1\"\n            >\n              {todo.text}\n            </span>\n            <button\n              onClick={() => deleteTodo(todo.id)}\n              className=\"text-red-500 hover:text-red-700\"\n            >\n              &#10005;\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAOe,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAsD,EAAE;IAEzF,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG,EAAE;IAEL,MAAM,aAAa;QACjB,MAAM,OAAO,MAAM,CAAA,GAAA,sHAAA,CAAA,WAAQ,AAAD;QAC1B,SAAS,KAAK,GAAG,CAAC,CAAC,OAAyC,CAAC;gBAC3D,IAAI,KAAK,GAAG;gBACZ,MAAM,KAAK,KAAK;gBAChB,WAAW;YACb,CAAC;IACH;IAEA,MAAM,UAAU;QACd,IAAI,CAAC,QAAQ,IAAI,IAAI;QACrB,SAAS;eAAI;YAAO;gBAAE,IAAI,KAAK,GAAG,GAAG,QAAQ;gBAAI,MAAM;gBAAS,WAAW;YAAM;SAAE;QACnF,WAAW;IACb;IAEA,MAAM,aAAa,CAAC;QAClB,SACE,MAAM,GAAG,CAAC,CAAC,OACT,KAAK,EAAE,KAAK,KAAK;gBAAE,GAAG,IAAI;gBAAE,WAAW,CAAC,KAAK,SAAS;YAAC,IAAI;IAGjE;IAEA,MAAM,aAAa,OAAO;QACxB,MAAM,CAAA,GAAA,sHAAA,CAAA,aAAU,AAAD,EAAE;QACjB;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACf,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAmD;;;;;;8BACjE,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BACC,MAAK;4BACL,WAAU;4BACV,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;;;;;;sCAE5C,8OAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;;;;;;;8BAIH,8OAAC;oBAAG,WAAU;8BACX,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC;4BAEC,WAAW,CAAC,wDAAwD,EAAE,KAAK,SAAS,GAAG,6BAA6B,IAAI;;8CAExH,8OAAC;oCACC,SAAS,IAAM,WAAW,KAAK,EAAE;oCACjC,WAAU;8CAET,KAAK,IAAI;;;;;;8CAEZ,8OAAC;oCACC,SAAS,IAAM,CAAA,GAAA,sHAAA,CAAA,aAAU,AAAD,EAAE,KAAK,EAAE;oCACjC,WAAU;8CACX;;;;;;;2BAZI,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;AAqBxB","debugId":null}}]
}