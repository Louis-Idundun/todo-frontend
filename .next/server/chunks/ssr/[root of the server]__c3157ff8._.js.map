{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///Users/louisidundun/Documents/sleeky-programmers/todo-frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:5000/todos'; //  Backend URL\n\nexport const api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: { 'Content-Type': 'application/json' }\n});\n\n// Fetch all todos\nexport const getTodos = async () => {\n  const response = await api.get('/');\n  return response.data;\n};\n\n// Create a new todo\nexport const createTodo = async (todo: { title: string }) => {\n  const response = await api.post('/', todo);\n  return response.data;\n};\n\n// Update a todo\nexport const updateTodo = async (id: string, updatedTodo: { title: string }) => {\n  const response = await api.put(`/${id}`, updatedTodo);\n  return response.data;\n};\n\n// Delete a todo\nexport const deleteTodo = async (id: string) => {\n  await api.delete(`/${id}`);\n};\n"],"names":[],"mappings":";;;;;;;AAAA;;AAEA,MAAM,eAAe,+BAA+B,eAAe;AAE5D,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IAC9B,SAAS;IACT,SAAS;QAAE,gBAAgB;IAAmB;AAChD;AAGO,MAAM,WAAW;IACtB,MAAM,WAAW,MAAM,IAAI,GAAG,CAAC;IAC/B,OAAO,SAAS,IAAI;AACtB;AAGO,MAAM,aAAa,OAAO;IAC/B,MAAM,WAAW,MAAM,IAAI,IAAI,CAAC,KAAK;IACrC,OAAO,SAAS,IAAI;AACtB;AAGO,MAAM,aAAa,OAAO,IAAY;IAC3C,MAAM,WAAW,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE;IACzC,OAAO,SAAS,IAAI;AACtB;AAGO,MAAM,aAAa,OAAO;IAC/B,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI;AAC3B","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///Users/louisidundun/Documents/sleeky-programmers/todo-frontend/src/components/TodoItem.tsx"],"sourcesContent":["import { Todo } from \"@/types/todo\";\n\ninterface TodoItemProps {\n  todo: Todo;\n  onToggle: (id: string) => void;\n  onDelete: (id: string) => void;\n}\n\nconst TodoItem: React.FC<TodoItemProps> = ({ todo, onToggle, onDelete }) => {\n  return (\n    <li className={`flex justify-between p-2 border rounded-md ${todo.completed ? \"bg-gray-200 line-through\" : \"\"}`}>\n      <span onClick={() => onToggle(todo.id)} className=\"cursor-pointer flex-1\">\n        {todo.text}\n      </span>\n      <button onClick={() => onDelete(todo.id)} className=\"text-red-500 hover:text-red-700\">\n        âœ•\n      </button>\n    </li>\n  );\n};\n\nexport default TodoItem;\n"],"names":[],"mappings":";;;;;AAQA,MAAM,WAAoC,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE;IACrE,qBACE,8OAAC;QAAG,WAAW,CAAC,2CAA2C,EAAE,KAAK,SAAS,GAAG,6BAA6B,IAAI;;0BAC7G,8OAAC;gBAAK,SAAS,IAAM,SAAS,KAAK,EAAE;gBAAG,WAAU;0BAC/C,KAAK,IAAI;;;;;;0BAEZ,8OAAC;gBAAO,SAAS,IAAM,SAAS,KAAK,EAAE;gBAAG,WAAU;0BAAkC;;;;;;;;;;;;AAK5F;uCAEe","debugId":null}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file:///Users/louisidundun/Documents/sleeky-programmers/todo-frontend/src/components/TodoLists.tsx"],"sourcesContent":["import { Todo } from \"@/types/todo\";\nimport TodoItem from \"./TodoItem\";\n\ninterface TodoListProps {\n  todos: Todo[];\n  onToggle: (id: string) => void;\n  onDelete: (id: string) => void;\n}\n\nconst TodoList: React.FC<TodoListProps> = ({ todos, onToggle, onDelete }) => {\n  return (\n    <ul className=\"mt-4 space-y-2\">\n      {todos.map((todo) => (\n        <TodoItem key={todo.id} todo={todo} onToggle={onToggle} onDelete={onDelete} />\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n"],"names":[],"mappings":";;;;AACA;;;AAQA,MAAM,WAAoC,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE;IACtE,qBACE,8OAAC;QAAG,WAAU;kBACX,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC,8HAAA,CAAA,UAAQ;gBAAe,MAAM;gBAAM,UAAU;gBAAU,UAAU;eAAnD,KAAK,EAAE;;;;;;;;;;AAI9B;uCAEe","debugId":null}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":["file:///Users/louisidundun/Documents/sleeky-programmers/todo-frontend/src/components/TodoForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\ninterface TodoFormProps {\n  onAdd: (title: string) => void;\n}\n\nconst TodoForm: React.FC<TodoFormProps> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!title.trim()) return;\n    onAdd(title);\n    setTitle('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input \n        type=\"text\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        placeholder=\"Enter todo\"\n      />\n      <button type=\"submit\">Add</button>\n    </form>\n  );\n};\n\nexport default TodoForm;\n"],"names":[],"mappings":";;;;AAAA;;;AAMA,MAAM,WAAoC,CAAC,EAAE,KAAK,EAAE;IAClD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,IAAI,CAAC,MAAM,IAAI,IAAI;QACnB,MAAM;QACN,SAAS;IACX;IAEA,qBACE,8OAAC;QAAK,UAAU;;0BACd,8OAAC;gBACC,MAAK;gBACL,OAAO;gBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;gBACxC,aAAY;;;;;;0BAEd,8OAAC;gBAAO,MAAK;0BAAS;;;;;;;;;;;;AAG5B;uCAEe","debugId":null}}]
}